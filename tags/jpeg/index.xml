<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jpeg on dernasherbrezon</title>
    <link>https://dernasherbrezon.com/tags/jpeg/</link>
    <description>Recent content in jpeg on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Dec 2020 14:40:18 +0100</lastBuildDate>
    
	<atom:link href="https://dernasherbrezon.com/tags/jpeg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Восстановление jpeg файлов</title>
      <link>https://dernasherbrezon.com/posts/restore-jpeg-file/</link>
      <pubDate>Wed, 16 Dec 2020 14:40:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/restore-jpeg-file/</guid>
      <description>1kuns-pf уже давно сгорел в плотных слоях атмосферы, но он оставил яркий след в базе данных Satnogs. Это самый наблюдаемый спутник на текущий момент. За два года своей работы сообщество приняло около 6 миллионов сообщений.
Я решил посмотреть, что же это за данные и как то нормализировать их. Так как спутник сгорел, то в результате должен получиться законченный датасет, удобный для анализа.
У меня есть описание формата трёх типов данных:</description>
    </item>
    
    <item>
      <title>Декодирование картинки fox-1d</title>
      <link>https://dernasherbrezon.com/posts/decoding-fox1d/</link>
      <pubDate>Thu, 14 May 2020 21:21:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/decoding-fox1d/</guid>
      <description>Люди по-прежнему запускают спутники в космос, а я по-прежнему пытаюсь декодировать с них сигналы. На этот раз я решил разобраться со спутниками семейства Fox. Они передают достаточно много данных:
 телеметрия результаты исследований радиации картинки  Если первые два типа данных достаточно стандартны, то вот картинки - это то, перед чем я не могу устоять.
Формат передачи данных Эти спутники могут передавать информацию с помощью двух протоколов:
 медленный. Скорость 200 бит в секунду.</description>
    </item>
    
    <item>
      <title>Изображения с DSLWP-B</title>
      <link>https://dernasherbrezon.com/posts/dslwp-b-images/</link>
      <pubDate>Sat, 15 Feb 2020 15:40:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/dslwp-b-images/</guid>
      <description>Недавно Дэниел и команда DSLWP выложили в общий доступ данные со спутника DSLWP-B. Эти данные включают в себя телеметрию, а также изображения Луны и Земли. Сам спутник уже был штатно разбит о Луну, поэтому больше данных с него не будет. Мне же стало интересно, как передавались изображения с лунной орбиты. Плюс, это была бы отличная возможность проверить работу моего ssdv декодера.
Для начала я скачал dslwp-data репозиторий и попытался декодировать файлы *.</description>
    </item>
    
    <item>
      <title>Кодирование jpeg</title>
      <link>https://dernasherbrezon.com/posts/jpeg-encoding/</link>
      <pubDate>Sat, 08 Feb 2020 16:04:00 +0000</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/jpeg-encoding/</guid>
      <description>Введение Для работой с jpeg файлами написано множество библиотек. Даже Java по умолчанию поддерживает чтение и запись jpeg файлов. Однако, когда требуется декодировать более сложные типы передачи jpeg, то необходимо понимать как устроен формат и какие алгоритмы используются. В этой статье я постараюсь максимально дотошно разобрать кодирование jpeg.
Типы передачи jpeg Прежде, чем разбирать кодирование цвета в jpeg, необходимо чётко разделять две вещи: кодирование цвета и передача блоков изображения.
Кодирование цвета - это набор алгоритмов для формирования, так называемых MCU, блоков пикселей 8х8 или 16х16.</description>
    </item>
    
    <item>
      <title>Декодирование картинки jy1sat</title>
      <link>https://dernasherbrezon.com/posts/decoding-jy1sat/</link>
      <pubDate>Thu, 23 Jan 2020 00:20:17 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/decoding-jy1sat/</guid>
      <description>Введение Все началось с того, что я решил подчистить неиспользуемый код в jradio. Оказалось, спутники семейства funcube шлют дополнительные 200 байт в пакете. В зависимости от спутника, там могут содержаться более детальная телеметрия или просто текстовые сообщения с земли. После небольшого исследования выяснилось, что спутник jy1sat использует их, чтобы передавать картинку! Это мгновенно заинтересовало меня, и в следующие несколько недель я не смог спать, думая о том, как её декодировать.</description>
    </item>
    
    <item>
      <title>Abbreviated jpeg в Java</title>
      <link>https://dernasherbrezon.com/posts/abbreviated-jpeg-java/</link>
      <pubDate>Thu, 09 Jan 2020 21:11:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/abbreviated-jpeg-java/</guid>
      <description>Я думаю все, кто хоть раз запускал компьютер, знают, что такое jpeg. Этот стандарт появился в далёком 1991 году и с тех пор оброс различными расширениями и дополнительными возможностями. Для обычных пользователей все эти изменения не видны. Вы просто кликаете по файлу и видите красивую картинку. Для 99% разработчиков jpeg также представляет собой чёрный ящик. Максимум, с чем может столкнуться среднестатистический разработчик - это оптимизировать размер картинок с помощью jpegtran или сконвертировать один формат в другой с помощью ImageIO.</description>
    </item>
    
  </channel>
</rss>