<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>администрирование on dernasherbrezon</title>
    <link>https://dernasherbrezon.com/tags/%D0%B0%D0%B4%D0%BC%D0%B8%D0%BD%D0%B8%D1%81%D1%82%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</link>
    <description>Recent content in администрирование on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 07 Aug 2021 06:50:18 +0100</lastBuildDate><atom:link href="https://dernasherbrezon.com/tags/%D0%B0%D0%B4%D0%BC%D0%B8%D0%BD%D0%B8%D1%81%D1%82%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Мониторинг Mikrotik роутеров с помощью Prometheus</title>
      <link>https://dernasherbrezon.com/posts/prometheus-monitoring-mikrotik/</link>
      <pubDate>Sat, 07 Aug 2021 06:50:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/prometheus-monitoring-mikrotik/</guid>
      <description>Для начала вообще пара слов о том, зачем мониторить роутеры. Роутер, как и любое другое устройство, имеет аппаратные ресурсы, которые могут закончится. Например, браузер стал медленнее открывать страницы или видео стало медленнее загружаться. Это может быть как из-за провайдера, так и из-за роутера. Возможно, к роутеру подключено слишком много устройств, и он стал медленнее, или параллельно кто-то качает слишком много - всё это может быть причиной замедления.
Большинство роутеров позволяют посмотреть загруженность ЦПУ или памяти прямо в админке.</description>
    </item>
    
    <item>
      <title>Странный Wi-Fi</title>
      <link>https://dernasherbrezon.com/posts/wifi-country-codes/</link>
      <pubDate>Sat, 19 Sep 2020 14:40:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/wifi-country-codes/</guid>
      <description>В процессе исследования странного поведения WiFi в RPi, я наткнулся на довольно интересную информацию. Немногие знают, но WiFi работает в разных странах на разных частотах. Исторически, частоты современного Wifi 2.4Ггц и 5Ггц использовались военными, метеорологическими станциями и радарами. В разных странах они работали немножко на разных частотах, поэтому когда пришёл WiFi, инженеры начали выкручиваться.
Они придумали довольно простой способ - это конфигурация WiFi в зависимости от страны. Несмотря на то, что железо в принципе может работать в широком диапазоне частот, его ограничивают на уровне прошивки в зависимости от страны.</description>
    </item>
    
    <item>
      <title>Питание Raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/power-supply-for-raspberrypi/</link>
      <pubDate>Sat, 29 Aug 2020 00:04:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/power-supply-for-raspberrypi/</guid>
      <description>Если поискать в интернете словосочетание &amp;ldquo;питание для raspberrypi&amp;rdquo;, то можно найти массу статей о том, что нужно использовать официальный блок питания на 5В и 2.5А. Но что, если RPi питается от солнечных панелей и в логах постоянно проскальзывает &amp;ldquo;Under-voltage detected!&amp;rdquo;? Для решения этой проблемы мне немного пришлось повозиться с теорией и корзиной для покупок.
Предыстория Прежде, чем пытаться найти решение, нужно понять начальные условия. Для одной из своих станций слежения за спутниками я решил использовать солнечную панель.</description>
    </item>
    
    <item>
      <title>Толстые и тонкие дистрибутивы</title>
      <link>https://dernasherbrezon.com/posts/thin-and-fat-distributives/</link>
      <pubDate>Wed, 26 Aug 2020 22:31:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/thin-and-fat-distributives/</guid>
      <description>На этой неделе я окончательно перевёл все мои проекты на Ubuntu 18.04 и тонкие .deb дистрибутивы. Этот проект я начал в начале года и окончательно завершил только сейчас, спустя почти 8 месяцев. Сама по себе миграция заслуживает отдельной статьи с нытьём и риторическими вопросами. Здесь же, я хочу немного описать противостояние тонких и толстых дистрибутивов. То, как я видел эту историю и немного анализа. Поехали!
Дистрибутивы Почти сразу же, как только написана первая версия любой программы, становится вопрос о том, как её распространять.</description>
    </item>
    
    <item>
      <title>Время в Raspberrypi - 3</title>
      <link>https://dernasherbrezon.com/posts/time-raspberrypi-3/</link>
      <pubDate>Wed, 19 Aug 2020 18:30:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/time-raspberrypi-3/</guid>
      <description>&amp;ldquo;Да сколько уже можно про время в Raspberrypi?!&amp;rdquo; - скажут некоторые. Однако, несмотря на две предыдущие статьи, мне есть о чём написать. Опять.
Как я уже неоднократно писал, время можно получить двумя способами:
 подключившись к интернету используя RTC модуль  На некоторых станциях у меня стоит RTC модуль, на некоторых нет. Но я не особо переживал по этому поводу, так как станции имели постоянное подключение к интернету.
Запах приключений Всё работало очень хорошо и стабильно, до тех пор пока я не обратил на странное поведения в логах.</description>
    </item>
    
    <item>
      <title>Время в Raspberrypi - 2</title>
      <link>https://dernasherbrezon.com/posts/time-raspberrypi-2/</link>
      <pubDate>Thu, 11 Jun 2020 21:35:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/time-raspberrypi-2/</guid>
      <description>Прошёл почти год с момента написания оригинальной статьи про время в Raspberrypi, и вот я уже снова столкнулся с этой проблемой. На этот раз мне захотелось сделать мобильную станцию слежения за спутниками вместе с поворотным устройством. Мобильность в данном случае означает то, что я могу принести станцию в поле, поймать несколько сигналов во время чтения книги, отнести домой и залить результаты в https://r2server.ru. Проблема оказалась там, где её никто не ждал.</description>
    </item>
    
    <item>
      <title>Время в Raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/time-raspberrypi/</link>
      <pubDate>Sat, 08 Jun 2019 14:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/time-raspberrypi/</guid>
      <description>Разобраться со временем в Raspberrypi (RPi) меня сподвиг один достаточно неприятный баг. В какой то момент моя базовая станция r2cloud просто переставала отправлять данные на сервер. В логах приложения при этом появляется следующая ошибка:
Jun 07 09:17:51 raspberrypi java[472]: java.lang.IllegalArgumentException: Bad sample time: 1559899071. Last update time was 1559902330, at least one second step is required Jun 07 09:17:51 raspberrypi java[472]: at com.aerse.core.RrdDb.store(RrdDb.java:799) Jun 07 09:17:51 raspberrypi java[472]: at com.aerse.core.Sample.update(Sample.java:194)  Что же это означает?</description>
    </item>
    
    <item>
      <title>Дистрибьюция Java приложений</title>
      <link>https://dernasherbrezon.com/posts/java-dist/</link>
      <pubDate>Tue, 18 Aug 2015 13:55:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/java-dist/</guid>
      <description>Удивительно, но факт - дистрибьюция Java приложений в 21 веке по прежнему огромный костыль. Разработчики до сих пор придумывают способы вроде rsync/copy-paste/wget для установки java приложений на сервер. И только монструозные enterprise production ready платформы иногда позволяют сделать чуть больше - откатить приложение на предыдущую версию. В этой статье я хотел бы рассказать о доступном и простом способе организации дистрибьюции.
deb и apt В мире существует множество действительно гигантских репозиториев приложений и инструментов по их дистрибьюции.</description>
    </item>
    
    <item>
      <title>Сборка пакета с помощью debconf</title>
      <link>https://dernasherbrezon.com/posts/debconf/</link>
      <pubDate>Sat, 11 Aug 2012 13:14:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/debconf/</guid>
      <description>Недавно столкнулся с задачей создания .deb пакета. Поскольку информация в сети разбросана и само описание команд debhelper несколько сумбурно, ниже привожу список действий помогающих собрать архив с нуля:
Создание исходников.
#: mkdir package-1.0 #: echo &amp;quot;Sample file in package&amp;quot; &amp;gt; package-1.0/file  Создание специального архива с исходниками
#: tar czf package-1.0.tar.gz package-1.0/ #: dh_make -c apache -f ../package-1.0.tar.gz  Редактирование параметров пакета.
#: nano debian/control  Создание конфигураций:
#: nano debain/package.</description>
    </item>
    
  </channel>
</rss>
