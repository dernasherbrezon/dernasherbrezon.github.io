<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rtlsdr on dernasherbrezon</title>
    <link>https://dernasherbrezon.com/tags/rtlsdr/</link>
    <description>Recent content in rtlsdr on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 08 Aug 2019 19:20:18 +0100</lastBuildDate>
    
	<atom:link href="https://dernasherbrezon.com/tags/rtlsdr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Тестирование SDR Filter v1.1</title>
      <link>https://dernasherbrezon.com/posts/test-sdr-filter/</link>
      <pubDate>Thu, 08 Aug 2019 19:20:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/test-sdr-filter/</guid>
      <description>Одна из моих базовых станций принимает очень много помех. Из-за низкой чувствительности rtl-sdr, полезный сигнал почти нельзя получить. У меня возникла идея о том, что часть помех может приходить от USB разъёма RPi. Чтобы проверить эту идею, я недавно приобрёл SDR Filter v1.1 от компании ExpElectroLab и решил сделать на него небольшое видео ревью.
  Процесс тестирования Самое интересное началось сразу же после распаковки устройства. Дело в том, что входящий USB порт формата Type B.</description>
    </item>
    
    <item>
      <title>Тестирование FM фильтров с помощью RTL-SDR</title>
      <link>https://dernasherbrezon.com/posts/test-fm-filter/</link>
      <pubDate>Sun, 14 Jul 2019 14:20:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/test-fm-filter/</guid>
      <description>TL;TR; Фильтры тестировать можно, но выводы нужно делать аккуратно.
Постановка задачи Архитектура rtl sdr требует специального фильтра на входе. Поскольку сильнешими источниками сигнала являются фм станции, то я решил поставить фм фильтры на входе приёмника. Но прежде, чем устанавливать их, мне хотелось измерить частотные характеристики фильтров и пощупать их в деле. Для этого я купил несколько фм фильтров и собрал стэнд для их тестирования.
Описание стэнда Тестирование заключается в том, что генератор сигнала создаёт широкополосный шум по всей ширине спектра.</description>
    </item>
    
    <item>
      <title>Работа с bash pipe из java</title>
      <link>https://dernasherbrezon.com/posts/bash-pipe-in-java/</link>
      <pubDate>Tue, 09 Jul 2019 20:50:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/bash-pipe-in-java/</guid>
      <description>Постановка задачи Не так давно передо мной встала задача работать с нативным приложением из java. Это приложение - rtl_sdr. Суть его работы достаточно простая: оно подключается к USB, читает данные и пишет их в файл или в stdout.
А дальше Обычно нативные приложения не рекомендуется запускать из JVM. Дело в том, что как только управление передаётся из JVM вовне, то все предоставленные гарантии JVM теряются. Но если хочется, то вызвать приложение можно так:</description>
    </item>
    
    <item>
      <title>Динамический диапазон rtl-sdr</title>
      <link>https://dernasherbrezon.com/posts/dynamic-range/</link>
      <pubDate>Sun, 30 Jun 2019 22:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/dynamic-range/</guid>
      <description>Ниже я сделал перевод одной замечательной заметки Mile Kokotov о динамическом диапазоне rtl-sdr. Это очень важный показатель, которым я заинтересовался и решил разобраться. Возможно кому-нибудь это тоже будет полезно.
 Большинство людей думает, что наиболее важной характеристикой радиоприёмника является чувствительность, но это не совсем так. Вообще, спроектировать и произвести приёмник с высокой чувствительностью не проблема. Гораздо сложнее для инженеров спроектировать приёмник с большим динамическим диапазоном, который смог бы принимать как очень слабые сигналы, так и очень сильные одновременно.</description>
    </item>
    
    <item>
      <title>Расчёт SQNR</title>
      <link>https://dernasherbrezon.com/posts/sqnr/</link>
      <pubDate>Thu, 27 Jun 2019 21:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/sqnr/</guid>
      <description>Введение Если открыть спецификацию на любой rtl-sdr приемник, то можно увидеть следующую характеристику: АЦП - 8 бит. Почему эта характеристика важна? Почему о ней пишут и что она значит? Я решил разобраться и провёл небольшое расследование.
SQNR АЦП преоразует сигнал из аналогового вида в цифровой. Это преобразование по своей сути всегда неточное. Дело в том, что аналоговый сигнал непрерывный, а цифровой - набор отсчетов. Процесс преобразования сигнала называется квантированием. При этом часть информации теряется, а значит, в терминах обработки сигнала появляется шум.</description>
    </item>
    
    <item>
      <title>JavaFX в 2019</title>
      <link>https://dernasherbrezon.com/posts/javafx-in-2019/</link>
      <pubDate>Sun, 16 Jun 2019 10:20:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/javafx-in-2019/</guid>
      <description>Зачем? Зачем вообще кому-то писать толстый клиент в 2019 году? Web и atom уже победили. Можно поставить браузер или еще 8Гб оперативной памяти и получить переливающееся приложение. К сожалению, не все задачи можно решать через web. Для измерения АЧХ фильтров, мне необходимо было достаточно простое приложение:
 запуск rtl_power и вывод результатов в виде графика чтение .csv файла и вывод в виде графика график должен реагировать на мышь и показывать текущее значение по X и Y  Понятно, что для такого простого приложения использовать web + web server или atom - это слишком.</description>
    </item>
    
    <item>
      <title>Сжимание I/Q потока на raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/rtlsdr-gzip/</link>
      <pubDate>Mon, 04 Mar 2019 17:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/rtlsdr-gzip/</guid>
      <description>Недавно я добавил поддержку более 20 спутников в r2cloud. Из-за этого принимаемых данных стало значительно больше и диск переполнился. Чтобы как-то решить эту проблему, я уменьшил количество сохраняемых наблюдений. Теперь сохраняются последние 3 наблюдения для каждого спутника. Это не сильно помогло:
Дело в том, что при пролёте спутника, я сохраняю данные в raw I/Q с частотой пример 240 000 сэмплов в секунду. Это создаёт файл:
240 000 байт/сек * 2 (канала) * 12 минут = 288000000 байт = ~288мб Почему такая большая частота?</description>
    </item>
    
    <item>
      <title>Производительность rtl_sdr на raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/rtlsdr-perf/</link>
      <pubDate>Sat, 02 Mar 2019 18:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/rtlsdr-perf/</guid>
      <description>Очень часто в сети можно встретить гиды по быстрой сборке на коленке анализатора радио с помощью rtl_sdr и raspberrypi. Большинство таких гидов ограничивается достаточно простым описанием: &amp;ldquo;возьмите одно вставьте другое, потом немного питоновских скриптов и у вас всё получится&amp;rdquo;. Для новичков и просто любителей DIY - это прекрасный подход. Можно достаточно быстро познакомится с технологией и увидеть результат. Но что делать если нужно собрать что-то более продвинутое? Что если важна производительность?</description>
    </item>
    
    <item>
      <title>DSP на Java</title>
      <link>https://dernasherbrezon.com/posts/dsp-java/</link>
      <pubDate>Thu, 08 Mar 2018 17:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/dsp-java/</guid>
      <description>Java - язык программирования общего назначения. Общего назначения - значит можно писать почти любые программы. Вот я и попытался написать программу, которую обычно пишут на С или C++. Под катом я попытаюсь рассказать, как я декодировал спутниковые снимки с Метеор-М №2.
Предисловие Когда я впервые заинтересовался декодированием спутниковых сигналов, то был, прямо говоря, удивлён. Сейчас софт для декодирования сигналов выглядит так же, как и библиотеки общего назначения лет 20 назад.</description>
    </item>
    
  </channel>
</rss>