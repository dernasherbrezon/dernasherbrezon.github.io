<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rtlsdr on dernasherbrezon</title>
    <link>https://dernasherbrezon.com/tags/rtlsdr/</link>
    <description>Recent content in rtlsdr on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Jun 2019 10:20:18 +0100</lastBuildDate>
    
	<atom:link href="https://dernasherbrezon.com/tags/rtlsdr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaFX в 2019</title>
      <link>https://dernasherbrezon.com/posts/javafx-in-2019/</link>
      <pubDate>Sun, 16 Jun 2019 10:20:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/javafx-in-2019/</guid>
      <description>Зачем? Зачем вообще кому-то писать толстый клиент в 2019 году? Web и atom уже победили. Можно поставить браузер или еще 8Гб оперативной памяти и получить переливающееся приложение. К сожалению, не все задачи можно решать через web. Для измерения АЧХ фильтров, мне необходимо было достаточно простое приложение:
 запуск rtl_power и вывод результатов в виде графика чтение .csv файла и вывод в виде графика график должен реагировать на мышь и показывать текущее значение по X и Y  Понятно, что для такого простого приложения использовать web + web server или atom - это слишком.</description>
    </item>
    
    <item>
      <title>Сжимание I/Q потока на raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/rtlsdr-gzip/</link>
      <pubDate>Mon, 04 Mar 2019 17:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/rtlsdr-gzip/</guid>
      <description>Недавно я добавил поддержку более 20 спутников в r2cloud. Из-за этого принимаемых данных стало значительно больше и диск переполнился. Чтобы как-то решить эту проблему, я уменьшил количество сохраняемых наблюдений. Теперь сохраняются последние 3 наблюдения для каждого спутника. Это не сильно помогло:
Дело в том, что при пролёте спутника, я сохраняю данные в raw I/Q с частотой пример 240 000 сэмплов в секунду. Это создаёт файл:
240 000 байт/сек * 2 (канала) * 12 минут = 288000000 байт = ~288мб Почему такая большая частота?</description>
    </item>
    
    <item>
      <title>Производительность rtl_sdr на raspberrypi</title>
      <link>https://dernasherbrezon.com/posts/rtlsdr-perf/</link>
      <pubDate>Sat, 02 Mar 2019 18:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/rtlsdr-perf/</guid>
      <description>Очень часто в сети можно встретить гиды по быстрой сборке на коленке анализатора радио с помощью rtl_sdr и raspberrypi. Большинство таких гидов ограничивается достаточно простым описанием: &amp;ldquo;возьмите одно вставьте другое, потом немного питоновских скриптов и у вас всё получится&amp;rdquo;. Для новичков и просто любителей DIY - это прекрасный подход. Можно достаточно быстро познакомится с технологией и увидеть результат. Но что делать если нужно собрать что-то более продвинутое? Что если важна производительность?</description>
    </item>
    
    <item>
      <title>DSP на Java</title>
      <link>https://dernasherbrezon.com/posts/dsp-java/</link>
      <pubDate>Thu, 08 Mar 2018 17:22:18 +0100</pubDate>
      
      <guid>https://dernasherbrezon.com/posts/dsp-java/</guid>
      <description>Java - язык программирования общего назначения. Общего назначения - значит можно писать почти любые программы. Вот я и попытался написать программу, которую обычно пишут на С или C++. Под катом я попытаюсь рассказать, как я декодировал спутниковые снимки с Метеор-М №2.
Предисловие Когда я впервые заинтересовался декодированием спутниковых сигналов, то был, прямо говоря, удивлён. Сейчас софт для декодирования сигналов выглядит так же, как и библиотеки общего назначения лет 20 назад.</description>
    </item>
    
  </channel>
</rss>