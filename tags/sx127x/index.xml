<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sx127x on dernasherbrezon</title>
    <link>https://dernasherbrezon.com/tags/sx127x/</link>
    <description>Recent content in Sx127x on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <lastBuildDate>Thu, 25 Jul 2024 21:08:18 +0100</lastBuildDate>
    <atom:link href="https://dernasherbrezon.com/tags/sx127x/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RSSI в sx127x</title>
      <link>https://dernasherbrezon.com/posts/sx127x-rssi/</link>
      <pubDate>Thu, 25 Jul 2024 21:08:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/posts/sx127x-rssi/</guid>
      <description>RSSI (received signal strength indicator) - это показатель уровня принимаемого сигнала. Для простоты - это те самые деления Вашего телефона, которые показывают уровень сигнала сети. Чем меньше, тем хуже и медленнее передаются данные. Этот показатель рассчитывается почти в каждом приёмнике и чипы sx127x не исключение. Но, так же как и во всех других приёмниках, этот показатель рассчитывается очень приближённо, и есть ненулевая вероятность получить совершенно случайные значения.&#xA;RSSI измеряется как логарифм отношения мощности принимаемого сигнала к 1мВт.</description>
    </item>
    <item>
      <title>Конечный автомат в sx127x</title>
      <link>https://dernasherbrezon.com/posts/sequencer-sx127x/</link>
      <pubDate>Tue, 23 Jul 2024 21:49:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/posts/sequencer-sx127x/</guid>
      <description>Чип sx127x имеет встроенный конечный автомат для FSK модема. Он содержит несколько заранее заданных состояний и позволяет программировать условия перехода между ними. Сделано это прежде всего для тех режимов, где нужна быстрая скорость реакции, а задержки на передачу данных в процессор и обратно слишком большие. Например, приёмник может проснуться, проверить есть ли синхрослово входящего сообщения и если нет, то заснуть на небольшой промежуток времени. Это позволяет немного съэкономить энергию.&#xA;Практическое применение В sx127x есть особенность: после того, как данные переданы, чип остаётся в режиме FSTX.</description>
    </item>
    <item>
      <title>Ошибка при передаче данных в sx127x</title>
      <link>https://dernasherbrezon.com/posts/bug-fsk-sx127x/</link>
      <pubDate>Mon, 08 Jul 2024 20:58:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/posts/bug-fsk-sx127x/</guid>
      <description>Основное назначение чипа sx127x - это приём и передача данных с помощью протокола LoRa. Однако, помимо этого он может использовать FSK модуляцию. Это сделано для того, чтобы быть совместимым с Европейской регуляцией частот EU868-870. Насколько я понял, устройства в сети LoRaWAN могут увеличивать скорость передачи данных в зависимости от различных условий. FSK позволяет передавать на гораздо большей скорости, чем LoRa, но при этом менее надёжно. В любом случае, раз уж такой режим есть, то неплохо было бы добавить его в sx127x.</description>
    </item>
    <item>
      <title>FSK модуляция в sx127x</title>
      <link>https://dernasherbrezon.com/posts/fsk-modulation-sx127x/</link>
      <pubDate>Mon, 01 May 2023 21:42:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/posts/fsk-modulation-sx127x/</guid>
      <description>Я продолжаю работать над библиотекой sx127x. Как только стало понятно как писать интеграционные тесты, я приступил к работе над различными сценариями. sx127x поддерживает достаточно много различных режимов работы, которые неплохо было бы покрыть тестами.&#xA;Чип поддерживает три типа модуляции: LoRa, FSK и OOK. LoRa - это проприетарный протокол, основанный на chirp модуляции. Скорей всего его запрещено анализировать и воспроизводить из-за различных патентов и лицензий. А вот FSK и OOK - отличные кандидаты на исследование.</description>
    </item>
    <item>
      <title>Тестирование sx127x</title>
      <link>https://dernasherbrezon.com/posts/testing-sx127x/</link>
      <pubDate>Sun, 23 Apr 2023 18:15:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/posts/testing-sx127x/</guid>
      <description>Я продолжаю разрабатывать библиотеку для работы с чипом sx127x, и в этом посте речь пойдёт о тестировании. Но для начала небольшая предыстория. Изначально библиотека поддерживала только LoRa модуляцию и была достаточно небольшой. По сути это была небольшая обёртка над регистрами sx127x, которая позволяла из Си вызывать нужные функции. Основная ценность скорее была в том, чтобы перевести магические числа и SPI протокол в понятные слова из даташита. После того как я решил добавить поддержку FSK модуляции, библиотека разрослась.</description>
    </item>
    <item>
      <title>Таймер в sx127x</title>
      <link>https://dernasherbrezon.com/posts/timer-sx127x/</link>
      <pubDate>Tue, 04 Apr 2023 19:12:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/posts/timer-sx127x/</guid>
      <description>В процессе разработки поддержки FSK модуляции для sx127x, я столкнулся с интересной задачей. В чипах sx127x есть уникальный режим, который позволяет периодически отправлять сообщения. Для этого достаточно задать байты для передачи, интервал между сообщениями и запустить стейт-машину, которая будет отправлять одинаковое сообщение с указанным интервалом.&#xA;Особенность задачи заключается в том, что интервал задаётся двумя таймерами. И для каждого таймера нужно задать два параметра: разрешение таймера и количество тиков. Разрешение таймера может быть трёх типов: 64 мкс, 4.</description>
    </item>
    <item>
      <title>sx127x для RaspberryPI</title>
      <link>https://dernasherbrezon.com/posts/lora-raspberrypi/</link>
      <pubDate>Sun, 15 Jan 2023 12:59:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/posts/lora-raspberrypi/</guid>
      <description>Продолжая работать над новой библиотекой sx127x, я решил добавить поддержку Linux и RaspberryPI в частности. Помимо чисто практической надобности, мне хотелось понять насколько отличается программирование под микроконтроллеры от обычных операционных систем.&#xA;Я с самого начала спроектировал библиотеку достаточно хорошо, поэтому для миграции под Linux потребовалось совсем немного изменений:&#xA;отказаться от esp_err.h и сделать возвращаемые коды типа int вынести работут с SPI в отдельный заголовок и переопределить для разных платформ Если первый пункт достаточно простой, то со вторым пришлось повозиться.</description>
    </item>
    <item>
      <title>sx127x</title>
      <link>https://dernasherbrezon.com/posts/sx127x/</link>
      <pubDate>Sat, 07 Jan 2023 16:33:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/posts/sx127x/</guid>
      <description>Один из фундаментальных вопросов, на который каждый программист должен периодически отвечать - &amp;ldquo;стоит ли взять готовую библиотеку или написать свою?&amp;rdquo;. Однозначно ответить на этот вопрос раз и навсегда не получится. Надо каждый раз садится и разбираться в каждом конкретном случае. Вот и мне недавно выпал этот случай.&#xA;В прошлом посте я писал как уменьшил потребление тока LoRa до 16мА. Однако, для этого мне пришлось модифицировать уже существующую библиотеку arduino-LoRa. Для того, чтобы провести эксперимент и проверить теорию, этого вполне достаточно, но для полноценного инженерного решения нужно что-то более основательное.</description>
    </item>
  </channel>
</rss>
