<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dernasherbrezon</title>
    <link>https://dernasherbrezon.com/en/</link>
    <description>Recent content on dernasherbrezon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Nov 2023 23:28:18 +0100</lastBuildDate>
    <atom:link href="https://dernasherbrezon.com/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Power consumption in lora-at</title>
      <link>https://dernasherbrezon.com/en/posts/lora-at-power-profiling/</link>
      <pubDate>Sat, 25 Nov 2023 23:28:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/lora-at-power-profiling/</guid>
      <description>Having thoroughly understood how Power Profiler Kit 2 (PPK2) works, I decided to test power consumption under different conditions. In fact, lora-at is not such a simple application. It works with bluetooth and the sx127x chip, processes commands from the UART bus and has a deep sleep mode. So there is a plenty of things to look for.&#xA;Measurement methodology Before you start measuring something, you need to decide how it will be measured.</description>
    </item>
    <item>
      <title>Power Profiler Kit 2</title>
      <link>https://dernasherbrezon.com/en/posts/power-profiler-kit2/</link>
      <pubDate>Fri, 24 Nov 2023 09:08:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/power-profiler-kit2/</guid>
      <description>After I re-wrote lora-at in C, I reduced the size of the firmware by half! However, although this looks impressive, it is actually not that important. If both versions fit on a chip, then size doesn&amp;rsquo;t make too much difference. Energy consumption is another matter. Low power consumption is important when operating from solar panels. That is why I decided to explore this topic in more detail.&#xA;Previously, I used the A3-B USB tester, but it is not suitable for measuring current consumption in microcontrollers.</description>
    </item>
    <item>
      <title>lora-at</title>
      <link>https://dernasherbrezon.com/en/posts/lora-at/</link>
      <pubDate>Sun, 05 Nov 2023 22:25:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/lora-at/</guid>
      <description>Background It&amp;rsquo;s been too long since my last post about LoRa. During this time, I created a project lora-at, which I would like to write about in this post. But before I deep dive into the meety details, I little background on how it started.&#xA;Initially, I planned to create a small firmware for receiving signals from satellites using LoRa protocol. I used tinyGS as a basis, which did almost everything I needed.</description>
    </item>
    <item>
      <title>BLE server using Java</title>
      <link>https://dernasherbrezon.com/en/posts/ble-server-java/</link>
      <pubDate>Tue, 17 Jan 2023 08:22:17 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/ble-server-java/</guid>
      <description>In one of my previous posts, I began optimizing the power consumption of ESP32 and LoRa. The idea was to put the microcontroller to sleep and wake it up only when data received. But how to know when to wake up? It all depends on the specific application. If you need to transmit data at regular intervals, you can hardcode it in the firmware. But what if data needs to be received at unpredictable intervals?</description>
    </item>
    <item>
      <title>sx127x for RaspberryPI</title>
      <link>https://dernasherbrezon.com/en/posts/lora-raspberrypi/</link>
      <pubDate>Sun, 15 Jan 2023 12:59:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/lora-raspberrypi/</guid>
      <description>Continuing work on the new sx127x library, I decided to add Linux support, specifically for Raspberry Pi. Besides the practical need, I wanted to understand how programming for microcontrollers differs from regular operating systems.&#xA;I designed the library quite well from the beginning, so migrating to Linux required only a few changes:&#xA;Abandoning esp_err.h and using return codes of type int Separating SPI operations into a separate header and redefining for different platforms.</description>
    </item>
    <item>
      <title>sx127x</title>
      <link>https://dernasherbrezon.com/en/posts/sx127x/</link>
      <pubDate>Sat, 07 Jan 2023 16:33:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/sx127x/</guid>
      <description>One of the fundamental questions that every programmer must periodically answer is &amp;ldquo;whether to use existing library or write your own.&amp;rdquo; It&amp;rsquo;s impossible to give a definitive answer to this question once and for all. You have to sit down and analyze each specific case. Recently, I faced such a situation, as I described in my previous post, where I explained how I reduced the LoRa current consumption to 16mA. If the goal is just to experiment and test some theory about the hardware, it was enough to modify the source code of existing arduino-LoRa.</description>
    </item>
    <item>
      <title>Optimizing LoRa power consumption</title>
      <link>https://dernasherbrezon.com/en/posts/lora-deep-sleep/</link>
      <pubDate>Sat, 10 Dec 2022 21:17:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/lora-deep-sleep/</guid>
      <description>In recent months, I have been working on reducing power consumption in the lora-at project. The idea is to create a self-sufficient receiver, place it on the balcony, and receive signals from satellites 24/7. Easier said than done, especially for those who have never optimized code for low power consumption or designed electrical circuits. Of course, you could install the largest solar panel, receive signals only during the day, and not worry about it.</description>
    </item>
    <item>
      <title>USB-tester A3-B</title>
      <link>https://dernasherbrezon.com/en/posts/smart-usb-meter-a3-b/</link>
      <pubDate>Thu, 06 Jan 2022 18:30:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/smart-usb-meter-a3-b/</guid>
      <description>Not long ago, I acquired a USB tester A3-B.&#xA;This device allows measuring the current and voltage flowing between the USB input and USB output. One end can be plugged into a charger, the other into a device, and the current consumption can be measured. There are numerous applications for this:&#xA;Measure current consumption in different modes: Sleep Active work Standby Measure consumption over time. The display can switch to a graphing mode, showing how consumption changes over a period.</description>
    </item>
    <item>
      <title>Creating FOTA component</title>
      <link>https://dernasherbrezon.com/en/posts/fota-for-r2lora/</link>
      <pubDate>Sun, 02 Jan 2022 21:04:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/fota-for-r2lora/</guid>
      <description>This post continues the development cycle of the r2lora project. Previous articles:&#xA;Creating a project for ESP32 Setting up a project in PlatformIO FOTA is an abbreviation for Firmware-Over-The-Air. This is a special component that updates the application if a new version is available.&#xA;Design Auto-update can be done in several ways:&#xA;The special component starts listening on TCP/UDP port. To update, you need to send the firmware to this port from any other device running on the network.</description>
    </item>
    <item>
      <title>Setting up a project in PlatformIO</title>
      <link>https://dernasherbrezon.com/en/posts/configuring-platformio/</link>
      <pubDate>Sat, 01 Jan 2022 20:30:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/configuring-platformio/</guid>
      <description>In the previous post I described the general design of r2lora and selected tools for development. Now we can focus on configuring the project and breaking it down into individual modules. PlatformIO integrates well with a variety of different tools and allows you to do complex things almost as easily as in Java.&#xA;Dependency Management A challenge in every C/C++ project is dependency management. There is no standard way to handle this in the language and ecosystem.</description>
    </item>
    <item>
      <title>Creating a project for ESP32</title>
      <link>https://dernasherbrezon.com/en/posts/programming-esp32/</link>
      <pubDate>Fri, 31 Dec 2021 01:30:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/programming-esp32/</guid>
      <description>Recently, the LoRa data transmission protocol has been gaining popularity. Several satellites actively use it, and there is a whole network for signal reception - tinyGS. Of course, I couldn&amp;rsquo;t miss such a trend, so I started exploring how to connect the LoRa protocol to r2cloud. Unfortunately, it&amp;rsquo;s a closed protocol, so you can&amp;rsquo;t demodulate it with the standard rtl-sdr. To receive the signal, you need to use a special chip that will output a ready-made packet.</description>
    </item>
    <item>
      <title>CPU-specific APT repositories</title>
      <link>https://dernasherbrezon.com/en/posts/apt-for-cpu/</link>
      <pubDate>Sat, 25 Sep 2021 13:17:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/apt-for-cpu/</guid>
      <description>Interesting fact - all applications located in the standard Debian or Ubuntu repositories are compiled with default options. This leads to interesting consequences. For example, programmers do not use SIMD instructions and rely on the compiler. The compiler cannot always optimize the code for a specific processor. As a result, all the super-fast capabilities of processors and incredible SIMD operations are not used.&#xA;Debian developers explain this feature by stating that enabling support for extended registers does not provide significant acceleration.</description>
    </item>
    <item>
      <title>Compare different compilation flags for RaspberryPi</title>
      <link>https://dernasherbrezon.com/en/posts/compare-compile-flags-raspberrypi/</link>
      <pubDate>Thu, 23 Sep 2021 21:20:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/compare-compile-flags-raspberrypi/</guid>
      <description>Recently, I came across the very first version of the RaspberryPi, and I decided to experiment a bit with this old hardware.&#xA;I was curious about how the performance of the volk library would differ depending on various compilation flags.&#xA;arm1176jzf-s Firstly, it is necessary to determine the processor. As known, RaspberryPi uses a system-on-the-chip (SoC) from Broadcom. It is even written on the processor itself: Broadcom BCM2835. Inside this chip, there are several logical components:</description>
    </item>
    <item>
      <title>Monitor Mikrotik routers using Prometheus</title>
      <link>https://dernasherbrezon.com/en/posts/prometheus-monitoring-mikrotik/</link>
      <pubDate>Sat, 07 Aug 2021 06:50:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/prometheus-monitoring-mikrotik/</guid>
      <description>To begin with, a few words about why it is necessary to monitor routers. A router, like any other device, has hardware resources that can become depleted. For example, the browser may become slower in opening pages or videos may take longer to load. This can be caused by either the internet service provider or the router. It&amp;rsquo;s possible that too many devices are connected to the router, causing it to slow down, or someone may be downloading excessively in parallel - all of this can be the reason for the slowdown.</description>
    </item>
    <item>
      <title>Dynamic libraries, RPATH and Conan</title>
      <link>https://dernasherbrezon.com/en/posts/dynamic-libraries-rpath/</link>
      <pubDate>Thu, 18 Feb 2021 23:11:18 +0000</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/dynamic-libraries-rpath/</guid>
      <description>This article is more of a summary of what I learned in the last week about dynamic libraries, RPATH, and Conan.&#xA;Introduction No one in their right mind would start learning how libraries are linked in MacOS. So, first, I&amp;rsquo;ll try to outline the problem I was trying to solve.&#xA;So, back in the old days when computer hard drives were small, computer memory was scarce, people came up with the idea of reusing libraries.</description>
    </item>
    <item>
      <title>Fat and thin distributions</title>
      <link>https://dernasherbrezon.com/en/posts/thin-and-fat-distributives/</link>
      <pubDate>Wed, 26 Aug 2020 22:31:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/thin-and-fat-distributives/</guid>
      <description>This week, I finally migrated all my projects to Ubuntu 18.04 and thin .deb distributions. I started this project at the beginning of the year and completed it only now, almost 8 months later. The migration itself deserves a separate article with complaints and rhetorical questions. Here, I want to briefly describe the confrontation between thin and fat distributions, share my perspective on this story, and provide some analysis. Let&amp;rsquo;s dive in!</description>
    </item>
    <item>
      <title>Unit tests</title>
      <link>https://dernasherbrezon.com/en/posts/unit-tests/</link>
      <pubDate>Mon, 25 May 2020 17:27:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/unit-tests/</guid>
      <description>15 years ago, nobody had even heard of unit tests. We just wrote the code once and then relied on manual QA and our sharp eyes to check for any issues. We all lived in perfect harmony and peace. But then came along those damn unit tests, and suddenly the world was split into two warring factions: those who write tests and those who don&amp;rsquo;t.&#xA;Spoiler alert: I&amp;rsquo;m on team auto-tests.</description>
    </item>
    <item>
      <title>Distributing Java application</title>
      <link>https://dernasherbrezon.com/en/posts/java-dist/</link>
      <pubDate>Tue, 18 Aug 2015 13:55:18 +0100</pubDate>
      <guid>https://dernasherbrezon.com/en/posts/java-dist/</guid>
      <description>Surprisingly, but a fact - distributing Java applications in the 21st century is still a huge hassle. Developers still come up with methods like rsync/copy-paste/wget to install Java applications on servers. And only monstrous enterprise production-ready platforms sometimes allow a bit more - rolling back the application to a previous version. In this article, I would like to talk about an accessible and straightforward way of organizing distribution.&#xA;deb и apt In the world, there are many truly gigantic repositories of applications and tools for their distribution.</description>
    </item>
  </channel>
</rss>
